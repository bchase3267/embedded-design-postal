gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 9-22-2012  18:32:18
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 2.9.0 #5416 (Feb  3 2010) (UNIX)
                                           ; This file was generated Sat Sep 22 18:32:18 2012
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f8520
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _heartbeat
                                           	global _main
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _stdin
                                           	extern _stdout
                                           	extern _RCSTA2bits
                                           	extern _TXSTA2bits
                                           	extern _CCP5CONbits
                                           	extern _CCP4CONbits
                                           	extern _T4CONbits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _PORTFbits
                                           	extern _PORTGbits
                                           	extern _PORTHbits
                                           	extern _PORTJbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _LATFbits
                                           	extern _LATGbits
                                           	extern _LATHbits
                                           	extern _LATJbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _TRISFbits
                                           	extern _TRISGbits
                                           	extern _TRISHbits
                                           	extern _TRISJbits
                                           	extern _MEMCONbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _PIE3bits
                                           	extern _PIR3bits
                                           	extern _IPR3bits
                                           	extern _EECON1bits
                                           	extern _RCSTA1bits
                                           	extern _TXSTA1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _PSPCONbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _CCP3CONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _LVDCONbits
                                           	extern _OSCCONbits
                                           	extern _STATUSbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _STKPTRbits
                                           	extern _Timer0_overflows
                                           	extern _Timer1_overflows
                                           	extern _Timer2_overflows
                                           	extern _Timer3_overflows
                                           	extern _Timer4_overflows
                                           	extern _Interrupt_port_in_use
                                           	extern _Encoder_on_iport
                                           	extern _Encoder_ticks
                                           	extern _Quad_input_port
                                           	extern _Porta_sample
                                           	extern _Portf_sample
                                           	extern _Porth_sample
                                           	extern _Rx_buff
                                           	extern _Rx_user_buff_index
                                           	extern _Spi_status
                                           	extern _Sonar_data_available
                                           	extern _Sonar_on_iport
                                           	extern _User_rxdata
                                           	extern _User_txdata
                                           	extern _Tx_buff
                                           	extern _Tx_user_buff_index
                                           	extern _RCSTA2
                                           	extern _TXSTA2
                                           	extern _TXREG2
                                           	extern _RCREG2
                                           	extern _SPBRG2
                                           	extern _CCP5CON
                                           	extern _CCPR5L
                                           	extern _CCPR5H
                                           	extern _CCP4CON
                                           	extern _CCPR4L
                                           	extern _CCPR4H
                                           	extern _T4CON
                                           	extern _PR4
                                           	extern _TMR4
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _PORTF
                                           	extern _PORTG
                                           	extern _PORTH
                                           	extern _PORTJ
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _LATF
                                           	extern _LATG
                                           	extern _LATH
                                           	extern _LATJ
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _TRISF
                                           	extern _TRISG
                                           	extern _TRISH
                                           	extern _TRISJ
                                           	extern _MEMCON
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _PIE3
                                           	extern _PIR3
                                           	extern _IPR3
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _EEADRH
                                           	extern _RCSTA1
                                           	extern _TXSTA1
                                           	extern _TXREG1
                                           	extern _RCREG1
                                           	extern _SPBRG1
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _PSPCON
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _CCP3CON
                                           	extern _CCPR3L
                                           	extern _CCPR3H
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _LVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _printf
                                           	extern _usart_init
                                           	extern _controller_submit_data
                                           	extern _controller_init
                                           	extern _delay_msec
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector 
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           	code
                                           __sdcc_gsinit_startup:
                                           ; I code from now on!
002c1a   ef0f     goto	0x2c1e              	goto	__sdcc_program_startup
002c1c   f016
                                           ; ; Starting pCode block
                                           __sdcc_program_startup:
002c1e   ec9f     call	0x3f3e, 0           	CALL	_main
002c20   f01f
                                           ; ;	return from main will lock up
                                           
002c22   ef11     goto	0x2c22              	GOTO	$
002c24   f016
                                           ; ; Starting pCode block
                                           S_firmware__main	code
                                           _main:
                                           ;	.line	24; firmware.c	controller_init();
003f3e   ec7d     call	0x2cfa, 0           	CALL	_controller_init
003f40   f016
                                           ;	.line	26; firmware.c	usart_init();
003f42   ecd1     call	0x3da2, 0           	CALL	_usart_init
003f44   f01e
                                           _00108_DS_:
                                           ;	.line	38; firmware.c	if(PIR1bits.RCIF) heartbeat();
003f46   aa9e     btfss	0x9e, 0x5, 0       	BTFSS	_PIR1bits, 5
003f48   d002     bra	0x3f4e               	BRA	_00106_DS_
003f4a   ece1     call	0x3bc2, 0           	CALL	_heartbeat
003f4c   f01d
                                           _00106_DS_:
                                           ;	.line	40; firmware.c	delay_msec(125);
003f4e   0e00     movlw	0                  	MOVLW	0x00
003f50   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003f52   0e7d     movlw	0x7d               	MOVLW	0x7d
003f54   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003f56   ecf6     call	0x39ec, 0           	CALL	_delay_msec
003f58   f01c
003f5a   0e02     movlw	0x2                	MOVLW	0x02
003f5c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003f5e   d7f3     bra	0x3f46               	BRA	_00108_DS_
003f60   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_firmware__heartbeat	code
                                           _heartbeat:
                                           ;	.line	44; firmware.c	void heartbeat(void)
003bc2   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003bc4   ffe5
003bc6   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003bc8   ffd9
003bca   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003bcc   ffe5
                                           ;	.line	48; firmware.c	dat = RCREG;
003bce   cfae     movff	0xfae, 0           	MOVFF	_RCREG, r0x00
003bd0   f000
                                           ;	.line	49; firmware.c	if(dat == 'p')
003bd2   5000     movf	0, 0, 0             	MOVF	r0x00, W
003bd4   0a70     xorlw	0x70               	XORLW	0x70
003bd6   e10f     bnz	0x3bf6               	BNZ	_00117_DS_
                                           ;	.line	51; firmware.c	printf("Hello, World!\n");
003bd8   0e00     movlw	0                  	MOVLW	UPPER(__str_0)
003bda   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003bdc   0e3c     movlw	0x3c               	MOVLW	HIGH(__str_0)
003bde   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003be0   0e00     movlw	0                  	MOVLW	LOW(__str_0)
003be2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003be4   ecbd     call	0x397a, 0           	CALL	_printf
003be6   f01c
003be8   0e03     movlw	0x3                	MOVLW	0x03
003bea   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	52; firmware.c	controller_submit_data(NO_WAIT);
003bec   0e00     movlw	0                  	MOVLW	0x00
003bee   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003bf0   ec99     call	0x2b32, 0           	CALL	_controller_submit_data
003bf2   f015
003bf4   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           _00117_DS_:
003bf6   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003bf8   f000
003bfa   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003bfc   ffd9
003bfe   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           __str_0:
003c00   6548     cpfsgt	0x48, 0x1         	DB	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x57, 0x6f, 0x72, 0x6c, 0x64
003c02   6c6c     negf	0x6c, 0             
003c04   2c6f     decfsz	0x6f, 0, 0        
003c06   5720     subfwb	0x20, 0x1, 0x1    
003c08   726f     btg	0x6f, 0x1, 0         
003c0a   646c     cpfsgt	0x6c, 0           
003c0c   0a21     xorlw	0x21               	DB	0x21, 0x0a, 0x00
003c0e   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  110 (0x006e) bytes ( 0.08%)
                                           ;           	   55 (0x0037) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    1 (0x0001) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 2.9.0 #5416 (Feb  3 2010) (UNIX)
                                           ; This file was generated Sat Sep 22 17:20:09 2012
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f8520
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global ___uflags
                                           	global __entry
                                           	global __startup
                                           	global __do_cinit
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _stack
                                           	extern _stack_end
                                           	extern _TBLPTRU
                                           	extern _TBLPTRH
                                           	extern _TBLPTRL
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _TABLAT
                                           	extern _POSTINC0
                                           	extern _POSTDEC0
                                           	extern _main
                                           	extern _cinit
                                           
                                           
                                           	idata
                                           ___uflags	db	0x00
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_crt0iz___entry	code	0X000800
                                           __entry:
000800   ef77     goto	0x3eee              	goto __startup 
000802   f01f
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_crt0iz___do_cinit	code
                                           __do_cinit:
                                           	; TBLPTR = &cinit
0033d2   0eca     movlw	0xca               	movlw low(_cinit)
0033d4   6ef6     movwf	0xf6, 0            	movwf _TBLPTRL
0033d6   0e3f     movlw	0x3f               	movlw high(_cinit)
0033d8   6ef7     movwf	0xf7, 0            	movwf _TBLPTRH
0033da   0e00     movlw	0                  	movlw upper(_cinit)
0033dc   6ef8     movwf	0xf8, 0            	movwf _TBLPTRU
                                           	; 0x05 = cinit.num_init
                                           	; movlb 0x07
0033de   0009     tblrd	*+                 	tblrd*+
0033e0   50f5     movf	0xf5, 0, 0          	movf _TABLAT, w
0033e2   6e05     movwf	0x5, 0             	movwf 0x05
0033e4   0009     tblrd	*+                 	tblrd*+
0033e6   50f5     movf	0xf5, 0, 0          	movf _TABLAT, w
0033e8   6e06     movwf	0x6, 0             	movwf 0x05 +1
                                           	; while (0x05) {
                                           test:
0033ea   e104     bnz	0x33f4               	bnz cont1 ;;done1
0033ec   6705     tstfsz	0x5, 0x1          	tstfsz 0x05, 1
0033ee   d002     bra	0x33f4               	bra cont1
                                           done1:
0033f0   ef36     goto	0x346c              	goto done
0033f2   f01a
                                           cont1:
                                           	; Count down so we only have to look up the data in _cinit once.
                                           	; At this point we know that TBLPTR points to the top of the current
                                           	; entry in _cinit, so we can just start reading the from, to, and
                                           	; size values.
                                           	; read the source address low
0033f4   0009     tblrd	*+                 	tblrd*+
0033f6   50f5     movf	0xf5, 0, 0          	movf _TABLAT, w
0033f8   6e00     movwf	0, 0               	movwf 0x00
                                           	; source address high
0033fa   0009     tblrd	*+                 	tblrd*+
0033fc   50f5     movf	0xf5, 0, 0          	movf _TABLAT, w
0033fe   6e01     movwf	0x1, 0             	movwf 0x00 + 1
                                           	; source address upper
003400   0009     tblrd	*+                 	tblrd*+
003402   50f5     movf	0xf5, 0, 0          	movf _TABLAT, w
003404   6e02     movwf	0x2, 0             	movwf 0x00 + 2
                                           	; skip a byte since it is stored as a 32bit int
003406   0009     tblrd	*+                 	tblrd*+
                                           	; read the destination address directly into FSR0
                                           	; destination address low
003408   0009     tblrd	*+                 	tblrd*+
00340a   50f5     movf	0xf5, 0, 0          	movf _TABLAT, w
00340c   6ee9     movwf	0xe9, 0            	movwf _FSR0L
                                           	; destination address high
00340e   0009     tblrd	*+                 	tblrd*+
003410   50f5     movf	0xf5, 0, 0          	movf _TABLAT, w
003412   6eea     movwf	0xea, 0            	movwf _FSR0H
                                           	; skip two bytes since it is stored as a 32bit int
003414   0009     tblrd	*+                 	tblrd*+
003416   0009     tblrd	*+                 	tblrd*+
                                           	; read the size of data to transfer to destination address
003418   0009     tblrd	*+                 	tblrd*+
00341a   50f5     movf	0xf5, 0, 0          	movf _TABLAT, w
00341c   6e03     movwf	0x3, 0             	movwf 0x03
00341e   0009     tblrd	*+                 	tblrd*+
003420   50f5     movf	0xf5, 0, 0          	movf _TABLAT, w
003422   6e04     movwf	0x4, 0             	movwf 0x03 +1
                                           	; skip two bytes since it is stored as a 32bit int
003424   0009     tblrd	*+                 	tblrd*+
003426   0009     tblrd	*+                 	tblrd*+
                                           	; 0x00 = 0x07 ->from;
                                           	; FSR0 = 0x07 ->to;
                                           	; 0x03 = (unsigned short) 0x07 ->size;
                                           	; the table pointer now points to the next entry. Save it
                                           	; off since we will be using the table pointer to do the copying
                                           	; for the entry
                                           	; 0x07 = TBLPTR
003428   cff6     movff	0xff6, 0x7         	movff _TBLPTRL, 0x07
00342a   f007
00342c   cff7     movff	0xff7, 0x8         	movff _TBLPTRH, 0x07 + 1
00342e   f008
003430   cff8     movff	0xff8, 0x9         	movff _TBLPTRU, 0x07 + 2
003432   f009
                                           	; now assign the source address to the table pointer
                                           	; TBLPTR = 0x00
003434   c000     movff	0, 0xff6           	movff 0x00, _TBLPTRL
003436   fff6
003438   c001     movff	0x1, 0xff7         	movff 0x00 + 1, _TBLPTRH
00343a   fff7
00343c   c002     movff	0x2, 0xff8         	movff 0x00 + 2, _TBLPTRU
00343e   fff8
                                           	; do the copy loop
                                           	; determine if we have any more bytes to copy
                                           	; movlb 0x03
003440   5003     movf	0x3, 0, 0           	movf 0x03, w
                                           copy_loop:
003442   e102     bnz	0x3448               	bnz copy_one_byte ; copy_one_byte
003444   5004     movf	0x4, 0, 0           	movf 0x03 + 1, w
003446   e007     bz	0x3456                	bz done_copying
                                           copy_one_byte:
003448   0009     tblrd	*+                 	tblrd*+
00344a   50f5     movf	0xf5, 0, 0          	movf _TABLAT, w
00344c   6eee     movwf	0xee, 0            	movwf _POSTINC0
                                           	; decrement byte counter
00344e   0603     decf	0x3, 0x1, 0         	decf 0x03, f
003450   e2f8     bc	0x3442                	bc copy_loop ; copy_loop
003452   0604     decf	0x4, 0x1, 0         	decf 0x03 + 1, f
003454   d7f9     bra	0x3448               	bra copy_one_byte
                                           done_copying:
                                           	; restore the table pointer for the next entry
                                           	; TBLPTR = 0x07
003456   c007     movff	0x7, 0xff6         	movff 0x07, _TBLPTRL
003458   fff6
00345a   c008     movff	0x8, 0xff7         	movff 0x07 + 1, _TBLPTRH
00345c   fff7
00345e   c009     movff	0x9, 0xff8         	movff 0x07 + 2, _TBLPTRU
003460   fff8
003462   0605     decf	0x5, 0x1, 0         	decf 0x05, f
003464   e201     bc	0x3468                	bc do_next
003466   0606     decf	0x6, 0x1, 0         	decf 0x05 + 1, f
                                           do_next:
                                           	; next entry...
                                           	; _do_cinit_curr_entry--;
003468   eff5     goto	0x33ea              	goto test;
00346a   f019
                                           	; emit done label
                                           done:
00346c   0012     return	0                 	return
                                           	
                                           ; ; Starting pCode block
                                           S_crt0iz___startup	code
                                           __startup:
003eee   ee11     lfsr	0x1, 0x1ff          	lfsr 1, _stack_end
003ef0   f0ff
003ef2   ee21     lfsr	0x2, 0x1ff          	lfsr 2, _stack_end
003ef4   f0ff
003ef6   6af8     clrf	0xf8, 0             	clrf _TBLPTRU, 0
003ef8   8ea6     bsf	0xa6, 0x7, 0         	bsf 0xa6, 7, 0
003efa   9ca6     bcf	0xa6, 0x6, 0         	bcf 0xa6, 6, 0
                                           	
                                           	; movlw 0xff
                                           	; movwf _FSR0L, 0
003efc   68e9     setf	0xe9, 0             	setf _FSR0L
003efe   0e0e     movlw	0xe                	movlw 0x0e
003f00   6eea     movwf	0xea, 0            	movwf _FSR0H, 0
                                           	; movlw 1
                                           	; movwf 0x00, 0
003f02   6800     setf	0, 0                	setf 0x00
003f04   0e00     movlw	0                  	movlw 0x00
                                           clear_loop:
003f06   6aed     clrf	0xed, 0             	clrf _POSTDEC0
003f08   5000     movf	0, 0, 0             	movf 0x00, w
003f0a   e1fd     bnz	0x3f06               	bnz clear_loop
                                           	
                                           ;	.line	112; crt0iz.c	_do_cinit();
003f0c   ece9     call	0x33d2, 0           	CALL	__do_cinit
003f0e   f019
                                           ;	.line	115; crt0iz.c	main();
003f10   ec9f     call	0x3f3e, 0           	CALL	_main
003f12   f01f
                                           _00110_DS_:
                                           ;	.line	119; crt0iz.c	goto loop;
003f14   d7ff     bra	0x3f14               	BRA	_00110_DS_
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  276 (0x0114) bytes ( 0.21%)
                                           ;           	  138 (0x008a) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
